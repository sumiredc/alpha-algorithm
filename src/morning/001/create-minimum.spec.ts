import { solve } from './create-minimum';

describe.each([
    ['123219', 3, '119'],
    ['32', 1, '2'],
    ['10123', 1, '123'],
    ['10', 2, '0'],
    ['857999', 3, '579'],
    ['1234', 2, '12'],
    [
        '326329038656427238318648276442682730000006826569382652446706507525395147319324990135949654778746766534037575309091749962071685538946668382509908441495136114588173557083714843880188967457044120566761986918543913540992978254150000770072455099888385585864028129453665617721066888970855170802960993539925',
        154,
        '143880188967457044120566761986918543913540992978254150000770072455099888385585864028129453665617721066888970855170802960993539925',
    ],
])('numbers-combination', (s: string, k: number, expected: string) => {
    it(`solve, s:${s} k:${k}`, () => {
        const actual = solve(s, k);
        expect(actual).toBe(expected);
    });
});
